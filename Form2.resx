<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gQMHDkMf/w8WIcNG1wdlEAAAAABJRU5ErkJggg==
</value>
  </data>
</root>